#!/usr/bin/python3

import re, csv, subprocess

# per_user is string key and list value of two integers, ex. {"todd":[5, 7],"bif:[3,20]}
per_user = {}

# error has string keys of error messages, and int values of amounts they occurred. ex. {"error":4}
error = {}

# pattern is regex to capture relevant fields from syslog error messages
pattern = r"ticky: (?P<type>\w+) (?P<message>.+) \((?P<user>[\w\.]+)\)"

with open("syslog", "r") as file:
	for line in file:
		regex = re.search(pattern, line)
		message = regex.group('message')
		type = regex.group('type')
		user = regex.group('user')

		if type == 'ERROR':
			# increment error dictionary
			if message not in error:
				error[message] = 1
			else:
				error[message] += 1
			# increment per_user dictionary
			if user not in per_user:
				per_user[user] = [0,1]
			else:
				per_user[user][1] +=1
		elif type == 'INFO':
			if user not in per_user:
				per_user[user] = [1,0]
			else:
				per_user[user][0] += 1

# sort per_user alphabetically, and error by order of values

per_user_sorted = sorted(per_user.items())
error_sorted = sorted(error.items(), key = lambda error: error[1], reverse = True)

# put sorted dictionaries into csv formats

with open('error_message.csv', 'w') as file:
	writer = csv.writer(file)
	writer.writerow(['Error', 'Count'])
	writer.writerows(error_sorted)
with open('user_statistics.csv', 'w') as file:
	writer = csv.writer(file)
	writer.writerow(['Username', 'INFO', 'ERROR'])
	for row in per_user_sorted:
		writer.writerow([row[0], row[1][0], row[1][1]])
			
			
"""
Here's your challenge: Write a script to generate two different reports based on the ranking of errors generated by the system and the user usage statistics for the service. You'll write the script on your own, but we'll guide you throughout.

First, import all the Python modules that you'll use in this Python script. After importing the necessary modules, initialize two dictionaries: one for the number of different error messages and another to count the number of entries for each user (splitting between INFO and ERROR).

Now, parse through each log entry in the syslog.log file by iterating over the file.

For each log entry, you'll have to first check if it matches the INFO or ERROR message formats. You should use regular expressions for this. When you get a successful match, add one to the corresponding value in the per_user dictionary. If you get an ERROR message, add one to the corresponding entry in the error dictionary by using proper data structure.

After you've processed the log entries from the syslog.log file, you need to sort both the per_user and error dictionary before creating CSV report files.

Keep in mind that:

The error dictionary should be sorted by the number of errors from most common to least common.
The user dictionary should be sorted by username.
Insert column names as ("Error", "Count") at the zero index position of the sorted error dictionary. And insert column names as ("Username", "INFO", "ERROR") at the zero index position of the sorted per_user dictionary.
"""
